<?php

require_once 'includes/courier_connector_misc.inc';
define('COURIER_CONNECTOR_CART', 'ubercart');

function courier_connector_uber_6_menu()
{  
  return get_courier_menu();
}

//function courier_connector_theme($existing, $type, $theme, $path) {
//    $theme_hooks = array(
//       'courier_connector_product_mapping_table' => array(
//       'render element' => 'form',
//       'file' => 'includes/admin.inc',
//        ), 
//        'courier_connector_order_table' => array(
//           'render element' => 'form',
//           'file' => 'includes/admin_requests.inc',
//        ),
//        'courier_connector_product_table' => array(
//           'render element' => 'form',
//           'file' => 'includes/admin_requests.inc',
//        ),
//        'courier_connector_customer_table' => array(
//           'render element' => 'form',
//           'file' => 'includes/admin_requests.inc',
//        ),
//         'courier_connector_order_mapping_table' => array(
//       'render element' => 'form',
//       'file' => 'includes/admin.inc',
//        ),
//        'courier_connector_request_table' => array(
//       'render element' => 'form',
//       'file' => 'includes/admin_requests.inc',
//        ),
//       'courier_connector_request_log_table' => array(
//       'render element' => 'form',
//       'file' => 'includes/admin_requests.inc',
//        ),
//        'courier_connector_customer_mapping_table' => array(
//       'render element' => 'form',
//       'file' => 'includes/admin.inc',
//        )
//    );
//            
//    return $theme_hooks;
//}

/**
* Implementation of hook_ca_action().
*/
function courier_connector_uber_6_ca_action() {
  
  //Download order action
  $order_arg = array(
    '#entity' => 'uc_order',
    '#title' => t('Order'),
  );
 
  $actions['download_order'] = array(
    '#title' => t('Download order to Quickbooks'),
    '#category' => t('Order'),
    '#callback' => 'courier_connector_uber_6_download_order',
    '#arguments' => array(
      'order' => $order_arg,        
    ),
  );
  //////
    
//  //Download Item Action
//  $product_arg = array(
//    '#entity' => 'node',
//    '#title' => t('Product'),
//  );
//  
//  $actions['download_product_qbpos'] = array(
//    '#title' => t('Download product to Quickbooks POS'),
//    '#category' => t('Product'),
//    '#callback' => 'courier_connector_download_product_qbpos',
//    '#arguments' => array(
//      'product' => $product_arg,  
//    ),
//  );
//  //////
    
  //Download Customer Action  
  $customer_arg = array(
    '#entity' => 'user',
    '#title' => t('Customer'),
  );  
 
  $actions['download_customer'] = array(
    '#title' => t('Download customer to Quickbooks'),
    '#category' => t('User'),
    '#callback' => 'courier_connector_uber_6_download_customer',
    '#arguments' => array(
      'customer' => $customer_arg,      
    ),
  );  
  ///////  
  
  //Request Item Action
//  $item_number_arg = array(
//    '#entity' => 'text',
//    '#title' => t('Item Number'),
//  );
//  
//  $date_modified = array(    
//    '#entity' => 'text',
//    '#title' => t('Date Modified'),
//  );
// 
//  $actions['download_product_qbpos'] = array(
//    '#title' => t('Request product(s) from Quickbooks POS'),
//    '#category' => t('Product'),
//    '#callback' => 'courier_connector_download_product_qbpos',
//    '#arguments' => array(
//      'item_number' => $item_number_arg,  
//      'date_modified' => $date_modified
//    ),
//  );  
//  ////////
//    
//  //Request Customer Action
//    $customer_name_arg = array(
//    '#entity' => 'text',
//    '#title' => t('Customer Name'),
//  );
//  
//  $cust_date_modified = array(    
//    '#entity' => 'text',
//    '#title' => t('Date Modified'),
//  );
// 
//  $actions['download_customer_qbpos'] = array(
//    '#title' => t('Request customer(s) from Quickbooks POS'),
//    '#category' => t('Product'),
//    '#callback' => 'courier_connector_download_customer_qbpos',
//    '#arguments' => array(
//      'customer_name' => $customer_name_arg,  
//      'date_modified' => $cust_date_modified
//    ),
//  );  
  ////////

  return $actions;
}

function courier_connector_uber_6_download_order($order) {           
  $request_data = serialize(array("SalesOrder_ids" => array($order->order_id)));
  
  //Save the order download request  
  db_query("insert into {courier_requests} (request_type, request_method, request_data) values('add', '%s', '%s')", $order_type, $request_data);  
  db_query("insert into {courier_transaction_log} (type, message, status) values(1, 'Order Queued for download: {$order->order_id}, Order Type: {$order_type}', true)");  
}

function courier_connector_uber_6_download_customer($user) {
  
}

//custom rules exposed
function courier_connector_uber_6_rules_action_info() {
  return get_courier_connector_rules_action_info();
}

function courier_connector_uber_6_read_items($from_date) {
  
}

function courier_connector_uber_6_read_customers($from_date) {
  
}

function courier_connector_uber_6_download_items($from_date) {
  
}

/**
  * Implements hook_services_resources().
  */
function courier_connector_uber_6_services_resources() {
 return get_courier_connector_services_resources();
}

/**
 * implementation of hook_services_request_postprocess_alter()
 */
function courier_connector_services_request_postprocess_alter(&$controller, &$args, &$result) {
//  global $services_log_globals;
// $services_log_globals['result'] = $result;
  
  //echo "here";
}

/**
 * implementation of hook_rest_server_request_parsers_alter()
 */
function courier_connector_uber_6_rest_server_request_parsers_alter(&$parsers) {
  get_courier_connector_rest_server_request_parsers_alter($parsers);
}
 
function courier_connector_uber_6_rest_server_response_formatters_alter(&$formatters) {
  get_courier_connector_rest_server_response_formatters_alter($formatters);
}

/**
  * Implements hook_permission().
  */
function courier_connector_uber_6_permission() { 
  return get_courier_connector_permission();
}

function courier_connector_uber_6_theme($existing, $type, $theme, $path) {
  return get_courier_connector_theme($existing, $type, $theme, $path);
}